///////////////////////////////////////////////////////////////////////////
// Precompilled headers
///////////////////////////////////////////////////////////////////////////
#include <pch.hpp>

///////////////////////////////////////////////////////////////////////////
// Headers
///////////////////////////////////////////////////////////////////////////
#include <xrn/Engine/Configuration.hpp>
#include <xrn/Engine/Event/WindowResized.hpp>
#include <xrn/Engine/AScene.hpp>


///////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////
// Constructors
//
///////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////
::xrn::engine::event::WindowResized::WindowResized(
    ::xrn::engine::vulkan::Window::Size size
)
    : m_size{ ::std::move(size) }
{}



///////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////
// Rule of 5
//
///////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////
::xrn::engine::event::WindowResized::~WindowResized() = default;

///////////////////////////////////////////////////////////////////////////
::xrn::engine::event::WindowResized::WindowResized(
    ::xrn::engine::event::WindowResized&&
) noexcept = default;

///////////////////////////////////////////////////////////////////////////
auto ::xrn::engine::event::WindowResized::operator=(
    ::xrn::engine::event::WindowResized&&
) noexcept
    -> ::xrn::engine::event::WindowResized& = default;



///////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////
// Resolve
//
///////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////
void ::xrn::engine::event::WindowResized::resolve(
    ::xrn::engine::AScene& scene
)
{
    scene.getWindow().resize(::std::move(m_size));
}
